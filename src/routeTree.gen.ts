/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ConfigImport } from './routes/config'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthIndexImport } from './routes/_auth.index'
import { Route as AuthUsersImport } from './routes/_auth.users'
import { Route as AuthHomeImport } from './routes/_auth.home'
import { Route as AuthUsersIndexImport } from './routes/_auth.users.index'
import { Route as AuthUsersIdImport } from './routes/_auth.users.$id'

// Create/Update Routes

const ConfigRoute = ConfigImport.update({
  path: '/config',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersRoute = AuthUsersImport.update({
  path: '/users',
  getParentRoute: () => AuthRoute,
} as any)

const AuthHomeRoute = AuthHomeImport.update({
  path: '/home',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersIndexRoute = AuthUsersIndexImport.update({
  path: '/',
  getParentRoute: () => AuthUsersRoute,
} as any)

const AuthUsersIdRoute = AuthUsersIdImport.update({
  path: '/$id',
  getParentRoute: () => AuthUsersRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/config': {
      id: '/config'
      path: '/config'
      fullPath: '/config'
      preLoaderRoute: typeof ConfigImport
      parentRoute: typeof rootRoute
    }
    '/_auth/home': {
      id: '/_auth/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthHomeImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users': {
      id: '/_auth/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthUsersImport
      parentRoute: typeof AuthImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/$id': {
      id: '/_auth/users/$id'
      path: '/$id'
      fullPath: '/users/$id'
      preLoaderRoute: typeof AuthUsersIdImport
      parentRoute: typeof AuthUsersImport
    }
    '/_auth/users/': {
      id: '/_auth/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof AuthUsersIndexImport
      parentRoute: typeof AuthUsersImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRoute: AuthRoute.addChildren({
    AuthHomeRoute,
    AuthUsersRoute: AuthUsersRoute.addChildren({
      AuthUsersIdRoute,
      AuthUsersIndexRoute,
    }),
    AuthIndexRoute,
  }),
  ConfigRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/config"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/home",
        "/_auth/users",
        "/_auth/"
      ]
    },
    "/config": {
      "filePath": "config.tsx"
    },
    "/_auth/home": {
      "filePath": "_auth.home.tsx",
      "parent": "/_auth"
    },
    "/_auth/users": {
      "filePath": "_auth.users.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/users/$id",
        "/_auth/users/"
      ]
    },
    "/_auth/": {
      "filePath": "_auth.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/$id": {
      "filePath": "_auth.users.$id.tsx",
      "parent": "/_auth/users"
    },
    "/_auth/users/": {
      "filePath": "_auth.users.index.tsx",
      "parent": "/_auth/users"
    }
  }
}
ROUTE_MANIFEST_END */
